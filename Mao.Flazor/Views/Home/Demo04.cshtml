@inherits Mao.Flazor.Views.Home.Demo04

<h3>從 server 端設置資料來源 (透過 @@inherits 將 server 端的 code 放在 cs) (加入 Service 層)</h3>

@* onchange 的 bindVariable 與 2. 設置的 secondaryOptions 相同，所以執行了那個方法 *@
<select id="select-primary" onchange="Flazor.bindVariable('secondaryOptions');">
    <option></option>
    <option>A</option>
    <option>B</option>
</select>
<select id="select-secondary">
    @helper RenderSecondaryOptions(
        // 4. 透過 [FlazorReturnSeletor] 設置將結果做為元件 select-secondary 的 Html
        // 因為 helper 的方法不能放置標籤，所以 FlazorReturn 開頭的標籤可以放在方法的任一參數上
        [FlazorReturnSeletor("#select-secondary")]
        // 3. 透過 [FlazorParamterVariable] 設置資料來源於變數 secondaryOptions
        [FlazorParamterVariable("secondaryOptions")] SelectListItem[] secondaryOptions)
    {
        if (secondaryOptions != null)
        {
            foreach (var secondaryOption in secondaryOptions)
            {
                <option value="@secondaryOption.Value" selected="@secondaryOption.Selected">@secondaryOption.Text</option>
            }
        }
    }
</select>

<script type="text/javascript">
    Flazor.addViewPath("@this.VirtualPath");
</script>